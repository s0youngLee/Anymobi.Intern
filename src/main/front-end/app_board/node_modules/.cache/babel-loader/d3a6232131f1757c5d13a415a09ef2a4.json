{"ast":null,"code":"// import React, { useState, createContext } from \"react\";\n// // import { useContext } from \"react\";\n// // import {AuthContext, AuthProvider} from \"./User/AuthContext\";\n// // function authProvide(){\n// //     const {userState, setUserState} = useContext(AuthContext);\n// //     const token = {};\n// //     const authenticationUser = () => {\n// //         isAuthenticated(token)\n// //         .then(data => {\n// //             if(data.error) {\n// //                 console.error('Error:', data.error)\n// //             } else {\n// //                 setUserState({\n// //                     _id: data.user._id,\n// //                     name: data.user.name,\n// //                     auth: data.user.auth\n// //                 });\n// //             }\n// //         });\n// //     };\n// //     useEffect(() => {\n// //         authenticationUser();\n// //     }, []);\n// //     return userState.auth ? <div>true</div> : <div>false</div>;\n// // }\n// export const AuthContext = createContext();\n// export const AuthProvider = ({children}) => {\n//     const [userState, setUserState] = useState({\n//         id: '',\n//         name: '',\n//         role: '',\n//         auth: false\n//     });\n//     const isAuthenticated = async (token) => {\n//         return await fetch(apiURL, {\n//             method: \"GET\",\n//             headers: {\n//                 \"Accept\": \"application/json\",\n//                 \"Authorization\": `Token ${token}`\n//             }\n//         })\n//         .then(response => response.json())\n//         .catch(err => console.log(err))\n//     };\n//     return (\n//         <AuthContext.Provider value={ {userState, setUserState, isAuthenticated} }>\n//             {children}\n//         </AuthContext.Provider>\n//     );\n// };","map":{"version":3,"names":[],"sources":["C:/Users/kelly/IdeaProjects/restAPI/src/main/front-end/app_board/src/User/AuthContext.js"],"sourcesContent":["// import React, { useState, createContext } from \"react\";\r\n\r\n\r\n// // import { useContext } from \"react\";\r\n// // import {AuthContext, AuthProvider} from \"./User/AuthContext\";\r\n\r\n// // function authProvide(){\r\n// //     const {userState, setUserState} = useContext(AuthContext);\r\n// //     const token = {};\r\n\r\n// //     const authenticationUser = () => {\r\n// //         isAuthenticated(token)\r\n// //         .then(data => {\r\n// //             if(data.error) {\r\n// //                 console.error('Error:', data.error)\r\n// //             } else {\r\n// //                 setUserState({\r\n// //                     _id: data.user._id,\r\n// //                     name: data.user.name,\r\n// //                     auth: data.user.auth\r\n// //                 });\r\n// //             }\r\n// //         });\r\n// //     };\r\n\r\n// //     useEffect(() => {\r\n// //         authenticationUser();\r\n// //     }, []);\r\n    \r\n// //     return userState.auth ? <div>true</div> : <div>false</div>;\r\n// // }\r\n\r\n\r\n// export const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({children}) => {\r\n//     const [userState, setUserState] = useState({\r\n//         id: '',\r\n//         name: '',\r\n//         role: '',\r\n//         auth: false\r\n//     });\r\n\r\n//     const isAuthenticated = async (token) => {\r\n//         return await fetch(apiURL, {\r\n//             method: \"GET\",\r\n//             headers: {\r\n//                 \"Accept\": \"application/json\",\r\n//                 \"Authorization\": `Token ${token}`\r\n//             }\r\n//         })\r\n//         .then(response => response.json())\r\n//         .catch(err => console.log(err))\r\n//     };\r\n\r\n//     return (\r\n//         <AuthContext.Provider value={ {userState, setUserState, isAuthenticated} }>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     );\r\n// };"],"mappings":"AAAA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}