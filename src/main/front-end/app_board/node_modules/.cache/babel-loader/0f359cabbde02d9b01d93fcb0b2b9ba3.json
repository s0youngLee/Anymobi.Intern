{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import { sliceArrayByLimit } from \"../func\";\n// import {PaginationWrapper, PageButton, FaAngleDoubleLeft, FaAngleDoubleRight, FaAngleLeft, FaAngleRight, ButtonWrapper} from \"react-paginate\";\n// function Page({totalPage, page, setPage}) {\n//     // 총 페이지 갯수에 따라 Pagination 갯수 정하기, limit 단위로 페이지 리스트 넘기기\n//     const [currentPageArray, setCurrentPageArray] = useState([]);\n//     const [totalPageArray, setTotalPageArray] = useState([]);\n//     const limit = 5;\n//     useEffect(() => {\n//       if (page % limit === 1) {\n//         setCurrentPageArray(totalPageArray[Math.floor(page / limit)]);\n//       } else if (page % limit === 0) {\n//         setCurrentPageArray(totalPageArray[Math.floor(page / limit) - 1]);\n//       }\n//     }, [page]);\n//     useEffect(() => {\n//       const slicedPageArray = sliceArrayByLimit(totalPage, limit);\n//       setTotalPageArray(slicedPageArray);\n//       setCurrentPageArray(slicedPageArray[0]);\n//     }, [totalPage]);\n//     return (\n//       <PaginationWrapper>\n//         <FaAngleDoubleLeft onClick={() => setPage(1)} disabled={page === 1} />\n//         <FaAngleLeft onClick={() => setPage(page - 1)} disabled={page === 1} />\n//         <ButtonWrapper>\n//           {currentPageArray?.map((i) => (\n//             <PageButton\n//               key={i + 1}\n//               onClick={() => setPage(i + 1)}\n//               aria-current={page === i + 1 ? 'page' : null}\n//             >\n//               {i + 1}\n//             </PageButton>\n//           ))}\n//         </ButtonWrapper>\n//         <FaAngleRight\n//           onClick={() => setPage(page + 1)}\n//           disabled={page === totalPage}\n//         />\n//         <FaAngleDoubleRight\n//           onClick={() => setPage(totalPage)}\n//           disabled={page === totalPage}\n//         />\n//       </PaginationWrapper>\n//     );\n//   };\n//   export default Page;","map":{"version":3,"names":[],"sources":["C:/Users/kelly/IdeaProjects/restAPI/src/main/front-end/app_board/src/Article/Page.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import { sliceArrayByLimit } from \"../func\";\r\n// import {PaginationWrapper, PageButton, FaAngleDoubleLeft, FaAngleDoubleRight, FaAngleLeft, FaAngleRight, ButtonWrapper} from \"react-paginate\";\r\n\r\n\r\n// function Page({totalPage, page, setPage}) {\r\n//     // 총 페이지 갯수에 따라 Pagination 갯수 정하기, limit 단위로 페이지 리스트 넘기기\r\n//     const [currentPageArray, setCurrentPageArray] = useState([]);\r\n//     const [totalPageArray, setTotalPageArray] = useState([]);\r\n//     const limit = 5;\r\n  \r\n//     useEffect(() => {\r\n//       if (page % limit === 1) {\r\n//         setCurrentPageArray(totalPageArray[Math.floor(page / limit)]);\r\n//       } else if (page % limit === 0) {\r\n//         setCurrentPageArray(totalPageArray[Math.floor(page / limit) - 1]);\r\n//       }\r\n//     }, [page]);\r\n  \r\n//     useEffect(() => {\r\n//       const slicedPageArray = sliceArrayByLimit(totalPage, limit);\r\n//       setTotalPageArray(slicedPageArray);\r\n//       setCurrentPageArray(slicedPageArray[0]);\r\n//     }, [totalPage]);\r\n  \r\n//     return (\r\n//       <PaginationWrapper>\r\n//         <FaAngleDoubleLeft onClick={() => setPage(1)} disabled={page === 1} />\r\n//         <FaAngleLeft onClick={() => setPage(page - 1)} disabled={page === 1} />\r\n//         <ButtonWrapper>\r\n//           {currentPageArray?.map((i) => (\r\n//             <PageButton\r\n//               key={i + 1}\r\n//               onClick={() => setPage(i + 1)}\r\n//               aria-current={page === i + 1 ? 'page' : null}\r\n//             >\r\n//               {i + 1}\r\n//             </PageButton>\r\n//           ))}\r\n//         </ButtonWrapper>\r\n//         <FaAngleRight\r\n//           onClick={() => setPage(page + 1)}\r\n//           disabled={page === totalPage}\r\n//         />\r\n//         <FaAngleDoubleRight\r\n//           onClick={() => setPage(totalPage)}\r\n//           disabled={page === totalPage}\r\n//         />\r\n//       </PaginationWrapper>\r\n//     );\r\n//   };\r\n  \r\n//   export default Page;"],"mappings":"AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}