{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelly\\\\IdeaProjects\\\\restAPI\\\\src\\\\main\\\\front-end\\\\app_board\\\\src\\\\Article\\\\FileForm.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport axios from \"axios\";\nimport { canChange, Download } from \"../func\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Files(_ref) {\n  _s();\n\n  let {\n    files,\n    user,\n    createdId\n  } = _ref;\n  let resource = useMemo(() => {\n    return new Blob();\n  }, []);\n  console.log(files);\n\n  function deleteFile(id, filename) {\n    if (window.confirm(\"Delete file \" + filename + \" ? \")) {\n      axios.delete(`/delete/${id}`).catch(e => {\n        console.log(e.response.status + \" : \" + e.response.statusText);\n      });\n      window.location.reload();\n    }\n  }\n\n  if (!_.isEmpty(files)) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: \" Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 28\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      children: Array.from(files).map((file, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [file.origin_name, \"  \\xA0\\xA0 \", Number(file.file_size).toFixed(2), \" MB \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), canChange(user, createdId) && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"image\",\n            src: require(\"../Icon/remove.png\").default,\n            alt: \"icon\",\n            style: {\n              width: \"20px\",\n              height: \"20px\",\n              objectFit: \"fill\",\n              verticalAlign: \"middle\",\n              marginLeft: \"10px\"\n            },\n            onClick: () => {\n              deleteFile(file.id, file.origin_name);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), !_.isEmpty(user) && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"image\",\n            src: require(\"../Icon/download.png\").default,\n            alt: \"icon\",\n            style: {\n              width: \"20px\",\n              height: \"20px\",\n              objectFit: \"fill\",\n              verticalAlign: \"middle\",\n              marginLeft: \"10px\"\n            },\n            onClick: () => {\n              Download(resource, \"download\", file.id, file.origin_name);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 26\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Files, \"hvdnTKzwRW78o8mvPll9TMe6Ao0=\");\n\n_c = Files;\nexport default Files;\n\nvar _c;\n\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"names":["useMemo","axios","canChange","Download","_","Files","files","user","createdId","resource","Blob","console","log","deleteFile","id","filename","window","confirm","delete","catch","e","response","status","statusText","location","reload","isEmpty","textAlign","Array","from","map","file","index","origin_name","Number","file_size","toFixed","require","default","width","height","objectFit","verticalAlign","marginLeft"],"sources":["C:/Users/kelly/IdeaProjects/restAPI/src/main/front-end/app_board/src/Article/FileForm.js"],"sourcesContent":["import { useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { canChange, Download } from \"../func\";\r\nimport _ from \"lodash\";\r\n\r\nfunction Files({files, user, createdId}) {\r\n    let resource = useMemo(() => { return new Blob(); },[])\r\n\r\n    console.log(files);\r\n    function deleteFile(id, filename){\r\n        if(window.confirm(\"Delete file \" + filename + \" ? \")){\r\n            axios.delete(`/delete/${id}`).catch((e) => {\r\n                console.log(e.response.status + \" : \" + e.response.statusText);\r\n            })\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    if(!_.isEmpty(files)){ <div> Loading ...</div>}\r\n    else{\r\n        return(\r\n            <div style={{textAlign: \"left\"}}>\r\n                {Array.from(files).map((file, index) => {\r\n                    return (<div key={index}>\r\n                        <span>{file.origin_name}  &nbsp;&nbsp; {Number(file.file_size).toFixed(2)} MB </span>\r\n                        {canChange(user, createdId) && \r\n                            <input type={\"image\"} src={require(\"../Icon/remove.png\").default} alt={\"icon\"}\r\n                                    style={{width:\"20px\", height:\"20px\", objectFit: \"fill\", verticalAlign: \"middle\", marginLeft: \"10px\"}}\r\n                                    onClick={() => {deleteFile(file.id, file.origin_name)}} />\r\n                        }\r\n                        {!_.isEmpty(user) && \r\n                            <input type={\"image\"} src={require(\"../Icon/download.png\").default} alt={\"icon\"}\r\n                            style={{width:\"20px\", height:\"20px\", objectFit: \"fill\", verticalAlign: \"middle\", marginLeft: \"10px\"}}\r\n                            onClick={() => {Download(resource, \"download\", file.id, file.origin_name)}} />\r\n                        }\r\n                         <br/> \r\n                    </div>)\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Files;"],"mappings":"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"},"metadata":{},"sourceType":"module"}