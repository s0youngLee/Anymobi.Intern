{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelly\\\\IdeaProjects\\\\restAPI\\\\src\\\\main\\\\front-end\\\\app_board\\\\src\\\\Article\\\\ArticleLists.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport ArticleList from './ArticleList';\nimport '../App.css';\nimport { FetchWithoutId } from '../func';\nimport ReactPaginate from \"react-paginate\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ArticleLists(_ref) {\n  _s();\n\n  let {\n    user,\n    isLogin\n  } = _ref;\n  const [page, setPage] = useState();\n\n  const changePage = page => {\n    setPage(page);\n  };\n\n  const articleList = Array.from(FetchWithoutId(\"board\").data);\n\n  if (!articleList) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          fontSize: \"30px\",\n          margin: \"10px\"\n        },\n        children: \" Article List \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this), isLogin && /*#__PURE__*/_jsxDEV(Link, {\n        to: `/board/add/0`,\n        id: \"none\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w3-button w3-border w3-round-xlarge w3-small w3-hover-teal\",\n          children: \"Write article \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ArticleList, {\n        user: user,\n        articleList: articleList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        pageCount: Math.ceil(articleList.length / 10),\n        pageRangeDisplayed: 3,\n        marginPagesDisplayed: 0,\n        breakLabel: \"\",\n        previousLabel: \"<<\",\n        nextLabel: \">>\",\n        onPageChange: changePage,\n        containerClassName: \"pagination\",\n        activeClassName: \"currentPage\",\n        previousClassName: \"pageLabel-btn\",\n        nextClassName: \"pageLabel-btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n} // function Page({articleCnt}){\n//     const [page, setPage] = useState(1);\n//     const handlePageChange = (page) => {\n//         setPage(page);\n//     };\n//     return (\n//         <ReactPaginate\n//             pageRangeDisplayed={Math.ceil(articleCnt/10)} // paginator의 페이지 범위\n//             activePage={page} // 현재 페이지\n//             itemsCountPerPage={3} // 한 페이지랑 보여줄 아이템 갯수\n//             totalItemsCount={articleCnt} // 총 아이템 갯수\n//             prevPageText={\"‹<\"} // \"이전\"을 나타낼 텍스트\n//             nextPageText={\"›>\"} // \"다음\"을 나타낼 텍스트\n//             onChange={handlePageChange} // 페이지 변경을 핸들링하는 함수\n//         />\n//     );\n// }\n\n\n_s(ArticleLists, \"49BRPeGi2jdDoHocO4TjBTzgQBE=\");\n\n_c = ArticleLists;\nexport default ArticleLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleLists\");","map":{"version":3,"names":["Link","ArticleList","FetchWithoutId","ReactPaginate","useState","ArticleLists","user","isLogin","page","setPage","changePage","articleList","Array","from","data","fontSize","margin","Math","ceil","length"],"sources":["C:/Users/kelly/IdeaProjects/restAPI/src/main/front-end/app_board/src/Article/ArticleLists.js"],"sourcesContent":["import {Link} from 'react-router-dom';\r\nimport ArticleList from './ArticleList';\r\nimport '../App.css'\r\nimport { FetchWithoutId } from '../func';\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useState } from 'react';\r\n\r\nfunction ArticleLists({user, isLogin}){\r\n    const [page, setPage] = useState()\r\n\r\n    const changePage = (page) => {\r\n        setPage(page);\r\n    }\r\n    \r\n    const articleList = Array.from(FetchWithoutId(\"board\").data);\r\n    if(!articleList){ return <div> Loading... </div> }\r\n    else {\r\n        return (\r\n            <> <b style={{ fontSize: \"30px\", margin : \"10px\"}}> Article List </b>\r\n            {isLogin && \r\n                <Link to={`/board/add/0`} id=\"none\"> \r\n                    <button className=\"w3-button w3-border w3-round-xlarge w3-small w3-hover-teal\"> \r\n                            Write article </button></Link>}\r\n            <ArticleList user={user} articleList={articleList} />\r\n            <hr/>\r\n            {/* 페이징 처리 추가 */}\r\n            <ReactPaginate \r\n                pageCount={Math.ceil(articleList.length / 10)}\r\n                pageRangeDisplayed={3}\r\n                marginPagesDisplayed={0}\r\n                breakLabel={\"\"}\r\n                previousLabel={\"<<\"}\r\n                nextLabel={\">>\"}\r\n                onPageChange={changePage}\r\n                containerClassName={\"pagination\"}\r\n                activeClassName={\"currentPage\"}\r\n                previousClassName={\"pageLabel-btn\"}\r\n                nextClassName={\"pageLabel-btn\"}\r\n            />  \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n// function Page({articleCnt}){\r\n    \r\n//     const [page, setPage] = useState(1);\r\n    \r\n//     const handlePageChange = (page) => {\r\n//         setPage(page);\r\n//     };\r\n    \r\n//     return (\r\n//         <ReactPaginate\r\n//             pageRangeDisplayed={Math.ceil(articleCnt/10)} // paginator의 페이지 범위\r\n//             activePage={page} // 현재 페이지\r\n//             itemsCountPerPage={3} // 한 페이지랑 보여줄 아이템 갯수\r\n//             totalItemsCount={articleCnt} // 총 아이템 갯수\r\n//             prevPageText={\"‹<\"} // \"이전\"을 나타낼 텍스트\r\n//             nextPageText={\"›>\"} // \"다음\"을 나타낼 텍스트\r\n//             onChange={handlePageChange} // 페이지 변경을 핸들링하는 함수\r\n//         />\r\n//     );\r\n      \r\n// }\r\n\r\n\r\nexport default ArticleLists;"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,YAAP;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,YAAT,OAAsC;EAAA;;EAAA,IAAhB;IAACC,IAAD;IAAOC;EAAP,CAAgB;EAClC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;;EAEA,MAAMM,UAAU,GAAIF,IAAD,IAAU;IACzBC,OAAO,CAACD,IAAD,CAAP;EACH,CAFD;;EAIA,MAAMG,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWX,cAAc,CAAC,OAAD,CAAd,CAAwBY,IAAnC,CAApB;;EACA,IAAG,CAACH,WAAJ,EAAgB;IAAE,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EAAgC,CAAlD,MACK;IACD,oBACI;MAAA,6BAAG;QAAG,KAAK,EAAE;UAAEI,QAAQ,EAAE,MAAZ;UAAoBC,MAAM,EAAG;QAA7B,CAAV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAH,EACCT,OAAO,iBACJ,QAAC,IAAD;QAAM,EAAE,EAAG,cAAX;QAA0B,EAAE,EAAC,MAA7B;QAAA,uBACI;UAAQ,SAAS,EAAC,4DAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ,eAKA,QAAC,WAAD;QAAa,IAAI,EAAED,IAAnB;QAAyB,WAAW,EAAEK;MAAtC;QAAA;QAAA;QAAA;MAAA,QALA,eAMA;QAAA;QAAA;QAAA;MAAA,QANA,eAQA,QAAC,aAAD;QACI,SAAS,EAAEM,IAAI,CAACC,IAAL,CAAUP,WAAW,CAACQ,MAAZ,GAAqB,EAA/B,CADf;QAEI,kBAAkB,EAAE,CAFxB;QAGI,oBAAoB,EAAE,CAH1B;QAII,UAAU,EAAE,EAJhB;QAKI,aAAa,EAAE,IALnB;QAMI,SAAS,EAAE,IANf;QAOI,YAAY,EAAET,UAPlB;QAQI,kBAAkB,EAAE,YARxB;QASI,eAAe,EAAE,aATrB;QAUI,iBAAiB,EAAE,eAVvB;QAWI,aAAa,EAAE;MAXnB;QAAA;QAAA;QAAA;MAAA,QARA;IAAA,gBADJ;EAwBH;AACJ,C,CAED;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;GAzDSL,Y;;KAAAA,Y;AA4DT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}