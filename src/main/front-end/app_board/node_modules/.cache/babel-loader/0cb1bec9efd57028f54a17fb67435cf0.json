{"ast":null,"code":"// import {useState, useCallback} from \"react\";\n// import { FetchWithId, FetchWithoutId } from \"../func\";\n// import axios from \"axios\";\n// import _ from \"lodash\";\n// function ArticleEdit({user}){\n//     const articleDetail = FetchWithId(\"board\", 1).data;\n//     const categoryList = Array.from(FetchWithoutId(\"category\").data);\n//     if(_.isEmpty(articleDetail)) {return <div> Loading ... </div>}\n//     else { \n//         return <ArticleEditForm articleDetail={articleDetail} categoryList={categoryList} user={user}/>\n//     }\n// }\n// function ArticleEditForm({articleDetail, categoryList, user}) {\n//     const [title, setTitle] = useState(articleDetail.title);\n//     const [content, setContent] = useState(articleDetail.content);\n//     const [selected, setSelected] = useState(articleDetail.category_id);\n//     const editTitle = useCallback(e => {\n//         setTitle(e.target.value);\n//     }, [])\n//     const editContent = useCallback(e => {\n//         setContent(e.target.value);\n//     }, [])\n//     const handleSelect = (e) => {\n//         setSelected(e.target.value);\n//     };\n//     const editArticle = (e) => {\n//         e.preventDefault();\n//         if(_.isEmpty(e.target.value)){ setTitle(articleDetail.title); }\n//         if(_.isEmpty(e.target.value)){ setContent(articleDetail.content); }\n//         axios.put(`/board/${articleDetail?.id}`, {\n//             data : {\n//                 title : title,\n//                 content : content,\n//                 created_id : user?.nick_name,\n//                 category_id : selected\n//             }\n//         }).then((res) => {\n//             alert(\"Article Edited\");\n//             window.location.reload(`/board/${articleDetail?.id}`);\n//         }).catch((e) => {\n//             alert(\"Failed to edit article.\\nPlease try again.\");\n//             window.location.replace(`/board/${articleDetail?.id}`);\n//         });\n//     }\n//     return(\n//         <div className=\"div-box\" >\n//             <form onSubmit={editArticle}>\n//                 <b style={{ fontSize: \"40px\"}}> Edit Article </b> <hr/>\n//                 <div style={{width: \"50%\", margin: \"auto\", textAlign: \"left\"}}>\n//                     <b style={{fontSize: \"20px\", justifyContent: \"left\"}}>User ID : {user?.nick_name} </b><br/>\n//                     <b> Category : </b>\n//                     <select onChange={handleSelect} value={articleDetail.category_id}>\n//                         {categoryList?.map((category, index) => {\n//                             return <option key={index} value={category.id}>{category.name}</option>;\n//                         })}\n//                     </select><br/>\n//                     <input type=\"text\" value={title} onChange={editTitle} required autoFocus /> <br/>\n//                     <textarea className=\"text-box\" value={content} onChange={editContent} required /> <br/>\n//                 </div>\n//                 <button type=\"submit\" className=\"w3-button w3-border w3-round-xlarge w3-small w3-hover-teal\" \n//                         style={{textAlign: \"right\"}}> Save </button>\n//             </form>\n//             <button className=\"w3-button w3-border w3-round-xlarge w3-small w3-hover-red\"\n//                         onClick={() => {window.location.href=`/board/${articleDetail?.id}`}}> Back </button>\n//         </div>\n//     )\n// }\n// export default ArticleEdit;","map":{"version":3,"names":[],"sources":["C:/Users/kelly/IdeaProjects/restAPI/src/main/front-end/app_board/src/Article/ArticleEdit.js"],"sourcesContent":["// import {useState, useCallback} from \"react\";\r\n// import { FetchWithId, FetchWithoutId } from \"../func\";\r\n// import axios from \"axios\";\r\n// import _ from \"lodash\";\r\n\r\n// function ArticleEdit({user}){\r\n//     const articleDetail = FetchWithId(\"board\", 1).data;\r\n//     const categoryList = Array.from(FetchWithoutId(\"category\").data);\r\n//     if(_.isEmpty(articleDetail)) {return <div> Loading ... </div>}\r\n//     else { \r\n//         return <ArticleEditForm articleDetail={articleDetail} categoryList={categoryList} user={user}/>\r\n//     }\r\n// }\r\n\r\n// function ArticleEditForm({articleDetail, categoryList, user}) {\r\n//     const [title, setTitle] = useState(articleDetail.title);\r\n//     const [content, setContent] = useState(articleDetail.content);\r\n//     const [selected, setSelected] = useState(articleDetail.category_id);\r\n\r\n//     const editTitle = useCallback(e => {\r\n//         setTitle(e.target.value);\r\n        \r\n//     }, [])\r\n    \r\n//     const editContent = useCallback(e => {\r\n//         setContent(e.target.value);\r\n//     }, [])\r\n    \r\n//     const handleSelect = (e) => {\r\n//         setSelected(e.target.value);\r\n//     };\r\n\r\n//     const editArticle = (e) => {\r\n//         e.preventDefault();\r\n//         if(_.isEmpty(e.target.value)){ setTitle(articleDetail.title); }\r\n//         if(_.isEmpty(e.target.value)){ setContent(articleDetail.content); }\r\n        \r\n//         axios.put(`/board/${articleDetail?.id}`, {\r\n//             data : {\r\n//                 title : title,\r\n//                 content : content,\r\n//                 created_id : user?.nick_name,\r\n//                 category_id : selected\r\n//             }\r\n//         }).then((res) => {\r\n//             alert(\"Article Edited\");\r\n//             window.location.reload(`/board/${articleDetail?.id}`);\r\n//         }).catch((e) => {\r\n//             alert(\"Failed to edit article.\\nPlease try again.\");\r\n//             window.location.replace(`/board/${articleDetail?.id}`);\r\n//         });\r\n//     }\r\n    \r\n//     return(\r\n//         <div className=\"div-box\" >\r\n//             <form onSubmit={editArticle}>\r\n//                 <b style={{ fontSize: \"40px\"}}> Edit Article </b> <hr/>\r\n\r\n//                 <div style={{width: \"50%\", margin: \"auto\", textAlign: \"left\"}}>\r\n//                     <b style={{fontSize: \"20px\", justifyContent: \"left\"}}>User ID : {user?.nick_name} </b><br/>\r\n//                     <b> Category : </b>\r\n//                     <select onChange={handleSelect} value={articleDetail.category_id}>\r\n//                         {categoryList?.map((category, index) => {\r\n//                             return <option key={index} value={category.id}>{category.name}</option>;\r\n//                         })}\r\n//                     </select><br/>\r\n//                     <input type=\"text\" value={title} onChange={editTitle} required autoFocus /> <br/>\r\n//                     <textarea className=\"text-box\" value={content} onChange={editContent} required /> <br/>\r\n//                 </div>\r\n\r\n//                 <button type=\"submit\" className=\"w3-button w3-border w3-round-xlarge w3-small w3-hover-teal\" \r\n//                         style={{textAlign: \"right\"}}> Save </button>\r\n//             </form>\r\n\r\n//             <button className=\"w3-button w3-border w3-round-xlarge w3-small w3-hover-red\"\r\n//                         onClick={() => {window.location.href=`/board/${articleDetail?.id}`}}> Back </button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ArticleEdit;"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}