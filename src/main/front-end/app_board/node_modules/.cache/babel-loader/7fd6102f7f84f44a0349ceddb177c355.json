{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelly\\\\IdeaProjects\\\\restAPI\\\\src\\\\main\\\\front-end\\\\app_board\\\\src\\\\Article\\\\CheckBox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckBox(_ref) {\n  let {\n    id,\n    checkedItems,\n    setCheckedItems\n  } = _ref;\n\n  const checkedItemHandler = (id, isChecked) => {\n    if (isChecked) {\n      checkedItems.add(id);\n      setCheckedItems(checkedItems);\n    } else if (!isChecked && checkedItems.has(id)) {\n      checkedItems.delete(id);\n      setCheckedItems(checkedItems);\n    }\n  };\n\n  const checkHandler = (_ref2, id) => {\n    let {\n      target\n    } = _ref2;\n    checkedItemHandler(id, target.checked);\n    console.log(checkedItems);\n  }; // console.log(bChecked, allChecked);\n\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: 'checkbox',\n    onChange: e => checkHandler(e, id),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      margin: \"11px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"names":["CheckBox","id","checkedItems","setCheckedItems","checkedItemHandler","isChecked","add","has","delete","checkHandler","target","checked","console","log","e","width","height","margin"],"sources":["C:/Users/kelly/IdeaProjects/restAPI/src/main/front-end/app_board/src/Article/CheckBox.js"],"sourcesContent":["function CheckBox({id, checkedItems, setCheckedItems}) {\r\n    \r\n\r\n    const checkedItemHandler = (id, isChecked) => {\r\n        if(isChecked) {\r\n          checkedItems.add(id);\r\n          setCheckedItems(checkedItems);\r\n        } else if (!isChecked && checkedItems.has(id)) {\r\n          checkedItems.delete(id);\r\n          setCheckedItems(checkedItems);\r\n        }\r\n    };\r\n\r\n\r\n    const checkHandler = ({ target }, id) => {\r\n        checkedItemHandler(id, target.checked);\r\n        console.log(checkedItems);\r\n    };\r\n\r\n    // console.log(bChecked, allChecked);\r\n\r\n    return(\r\n        <input type={'checkbox'} onChange={(e) => checkHandler(e, id)}\r\n               style={{width: \"20px\", height: \"20px\", margin: \"11px\"}}/>\r\n    )\r\n}\r\n\r\nexport default CheckBox;"],"mappings":";;;AAAA,SAASA,QAAT,OAAuD;EAAA,IAArC;IAACC,EAAD;IAAKC,YAAL;IAAmBC;EAAnB,CAAqC;;EAGnD,MAAMC,kBAAkB,GAAG,CAACH,EAAD,EAAKI,SAAL,KAAmB;IAC1C,IAAGA,SAAH,EAAc;MACZH,YAAY,CAACI,GAAb,CAAiBL,EAAjB;MACAE,eAAe,CAACD,YAAD,CAAf;IACD,CAHD,MAGO,IAAI,CAACG,SAAD,IAAcH,YAAY,CAACK,GAAb,CAAiBN,EAAjB,CAAlB,EAAwC;MAC7CC,YAAY,CAACM,MAAb,CAAoBP,EAApB;MACAE,eAAe,CAACD,YAAD,CAAf;IACD;EACJ,CARD;;EAWA,MAAMO,YAAY,GAAG,QAAaR,EAAb,KAAoB;IAAA,IAAnB;MAAES;IAAF,CAAmB;IACrCN,kBAAkB,CAACH,EAAD,EAAKS,MAAM,CAACC,OAAZ,CAAlB;IACAC,OAAO,CAACC,GAAR,CAAYX,YAAZ;EACH,CAHD,CAdmD,CAmBnD;;;EAEA,oBACI;IAAO,IAAI,EAAE,UAAb;IAAyB,QAAQ,EAAGY,CAAD,IAAOL,YAAY,CAACK,CAAD,EAAIb,EAAJ,CAAtD;IACO,KAAK,EAAE;MAACc,KAAK,EAAE,MAAR;MAAgBC,MAAM,EAAE,MAAxB;MAAgCC,MAAM,EAAE;IAAxC;EADd;IAAA;IAAA;IAAA;EAAA,QADJ;AAIH;;KAzBQjB,Q;AA2BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}