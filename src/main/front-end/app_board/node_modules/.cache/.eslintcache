[{"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\index.js":"1","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\reportWebVitals.js":"2","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\App.js":"3","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Home.js":"4","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\ArticleLists.js":"5","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\ArticlesByCategory.js":"6","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\ArticleDetail.js":"7","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\Article.js":"8","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\ArticleRegister.js":"9","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Comment\\Comment.js":"10","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\ArticleEdit.js":"11","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\CategoryRegister.js":"12","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\CategoryEdit.js":"13","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Comment\\CommentRegister.js":"14","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\CategoryDetail.js":"15","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\CategoryBar.js":"16","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Comment\\CommentEdit.js":"17"},{"size":389,"mtime":1664233357424,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1664233357425,"results":"20","hashOfConfig":"19"},{"size":2348,"mtime":1664439609175,"results":"21","hashOfConfig":"19"},{"size":429,"mtime":1664233357422,"results":"22","hashOfConfig":"19"},{"size":2060,"mtime":1664426105853,"results":"23","hashOfConfig":"19"},{"size":2767,"mtime":1664439150809,"results":"24","hashOfConfig":"19"},{"size":3034,"mtime":1664498269135,"results":"25","hashOfConfig":"19"},{"size":870,"mtime":1664439639063,"results":"26","hashOfConfig":"19"},{"size":3119,"mtime":1664328122273,"results":"27","hashOfConfig":"19"},{"size":1324,"mtime":1664500098736,"results":"28","hashOfConfig":"19"},{"size":3568,"mtime":1664439693975,"results":"29","hashOfConfig":"19"},{"size":1996,"mtime":1664423499747,"results":"30","hashOfConfig":"19"},{"size":2431,"mtime":1664430754238,"results":"31","hashOfConfig":"19"},{"size":1954,"mtime":1664339138475,"results":"32","hashOfConfig":"19"},{"size":1892,"mtime":1664430217901,"results":"33","hashOfConfig":"19"},{"size":762,"mtime":1664439709272,"results":"34","hashOfConfig":"19"},{"size":1788,"mtime":1664500091149,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"180vb6v",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\index.js",[],["77","78"],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\reportWebVitals.js",[],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\App.js",["79"],"import React, {useState, useEffect} from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport ArticleLists from \"./Article/ArticleLists\";\r\nimport ArticleDetail from \"./Article/ArticleDetail\";\r\nimport ArticleEdit from \"./Article/ArticleEdit\";\r\nimport ArticleRegister from \"./Article/ArticleRegister\";\r\nimport CategoryRegister from \"./Category/CategoryRegister\";\r\nimport CategoryEdit from \"./Category/CategoryEdit\";\r\nimport ArticlesByCategory from \"./Category/ArticlesByCategory\";\r\nimport CategoryDeatil from \"./Category/CategoryDetail\";\r\nimport './App.css';\r\n\r\n// const isEmpty = function(value){\r\n//     if(value === \"\" || value === null || value === undefined || ( value !== null && typeof value === \"object\" && !Object.keys(value).length)){\r\n//         return true;\r\n//     }else { return false; }\r\n// }\r\n\r\nfunction App() {\r\n    const [categoryList, setCategoryList] = useState({  data : {}  });\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        const res = fetch('/category')\r\n                    .then((res) => res.json())\r\n                    .then((result) => {\r\n                        setCategoryList(result);\r\n                        setLoading(false)\r\n                    });\r\n    }, [])\r\n    \r\n\r\n    if(loading) { return <h1> Loading ... </h1> }\r\n    else {\r\n        return(\r\n            <div><Router><Routes>\r\n                    <Route path=\"/\" exact element={<Home/>} />\r\n                    <Route path=\"/board\" element={<ArticleLists category={categoryList.data}/>} />\r\n                    <Route path=\"/board/:articleId\" element={<ArticleDetail/>} /> \r\n                    <Route path=\"/board/category/:categoryId\" element={<ArticlesByCategory category={categoryList.data}/>} />\r\n                    <Route path=\"/board/add/:categoryId\" element={<ArticleRegister />} />\r\n                    <Route path=\"/board/:articleId/edit\" element={<ArticleEdit/>} />\r\n    \r\n                    <Route path=\"/category\" element={<CategoryDeatil category={categoryList.data}/>} />\r\n                    <Route path=\"/category/add/\" element={<CategoryRegister />} />\r\n                    <Route path=\"/category/:categoryId/edit\" element={<CategoryEdit />} />\r\n            </Routes></Router></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Home.js",[],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\ArticleLists.js",["80"],"import React, { useEffect, useState } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport Article from \"../Article/Article\";\r\nimport CategoryBar from \"../Category/CategoryBar\";\r\nimport '../App.css'\r\n\r\nfunction ArticleLists({category}){\r\n    const [articleList, setArticleList] = useState({\r\n        data : {}\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(()=> {\r\n        const RES = fetch('/board')\r\n                    .then((res) => res.json())\r\n                    .then((result) => {\r\n                        setArticleList(result);\r\n                        setLoading(false);\r\n                    });\r\n    }, [])\r\n\r\n    const articleListArr = Array.from(articleList.data);\r\n\r\n    if(loading) { return <div> Loading ... </div> }\r\n    else {\r\n        return (\r\n        <div>\r\n            <CategoryBar category={category}/>\r\n            <h1 style={{color: \"#373737\", textAlign:\"center\"}}> Aritcle List </h1> \r\n            <table id=\"list\">\r\n                <thead>\r\n                    <tr>\r\n                        <th id=\"item\"> ID </th>\r\n                        <th id=\"item\"> Title </th>\r\n                        <th id=\"item\"> Category </th>\r\n                        <th id=\"item\"> Created By </th>\r\n                        <th id=\"item\"> Created At </th>\r\n                        <th id=\"item\"> Visit </th>\r\n                        <th id=\"item\"> Comment </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {articleListArr.map((article, index) => (\r\n                        <tr key={index}><Article data={article}/></tr>\r\n                        ))}\r\n                </tbody>\r\n            </table>\r\n            <br/>\r\n            <div style={{width: \"100%\", textAlign: \"center\"}}>\r\n                <Link to={`/`} id=\"none\"> <button id=\"btn-default\"> Home </button></Link>\r\n                <Link to={`/board/add/0`} id=\"none\"> <button id=\"btn-post\"> Write </button></Link>\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\n\r\nexport default ArticleLists;\r\n\r\n\r\n","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\ArticlesByCategory.js",["81","82"],"import React, { useState, useEffect} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport Article from \"../Article/Article\";\r\nimport _ from 'lodash';\r\n\r\nfunction ArticlesByCategory({category}){\r\n    const urlList = ((window.location.href).split('/'));\r\n    const categoryId = urlList[(urlList.length)-1]\r\n    // console.log(category);\r\n\r\n    const [articleByCategory, setArticleByCategory] = useState({  data : {}  });\r\n    const [categoryName, setCategoryName] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(()=> {\r\n        const RES = fetch(`/board/category/${categoryId}`)\r\n                    .then(res =>  res.json())\r\n                    .then(result => {\r\n                        setArticleByCategory(result);\r\n                        for(let i = 0; i<category.length; i++){\r\n                            // console.log(category[i].id);\r\n                            if(_.isEqual(categoryId,(String)(category[i]?.id))){\r\n                                setCategoryName(category[i].name);\r\n                                break;\r\n                            }\r\n                        }\r\n                        // console.log(categoryName);\r\n                        setLoading(false);\r\n                    });\r\n    }, []);\r\n    \r\n    if(loading) { return <div> Loading ... </div> }\r\n    else {\r\n        return (\r\n        <div>\r\n            <div>\r\n                <h1 style={{color: \"#373737\", textAlign:\"center\"}}> Category : {categoryName} </h1> \r\n            </div>\r\n            <table id=\"list\">\r\n                <thead>\r\n                    <tr>\r\n                        <th id=\"item\"> ID </th>\r\n                        <th id=\"item\"> Title </th>\r\n                        <th id=\"item\"> Category </th>\r\n                        <th id=\"item\"> Created By </th>\r\n                        <th id=\"item\"> Created At </th>\r\n                        <th id=\"item\"> Visit </th> \r\n                        <th id=\"item\"> Comment </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {articleByCategory?.data?.map((article, index) => (\r\n                        <tr key={index}><Article data={article} /></tr>\r\n                        ))}\r\n                </tbody>\r\n            </table>\r\n            <br/>\r\n            <div style={{width: \"100%\", textAlign: \"center\"}}>\r\n                <Link to={`/`} id=\"none\"> <button id=\"btn-default\"> Home </button></Link>\r\n                <Link to={`/board`} id=\"none\"><button id=\"btn-default\"> Board </button></Link>\r\n                <Link to={`/board/add/${categoryId}`} id=\"none\"> <button id=\"btn-post\"> Write </button></Link> \r\n                <br/>\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default ArticlesByCategory;","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\ArticleDetail.js",["83","84"],"import {useState, useEffect} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport Comment from \"../Comment/Comment\";\r\n\r\nfunction ArticleDeatil(){\r\n    const urlList = ((window.location.href).split('/'));\r\n    const articleId = urlList[(urlList.length)-1];\r\n\r\n    const [articleDetail, setArticleDetail] = useState({\r\n        data : {}\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(()=> {\r\n        const RES = fetch(`/board/${articleId}`)\r\n                    .then(res =>  res.json())\r\n                    .then(result => {\r\n                        setArticleDetail(result);\r\n                        setLoading(false);\r\n        });\r\n    },[]);\r\n\r\n    if(loading) { return <h1> Loading .. </h1>}\r\n    else { return <ArticleDetailData data={articleDetail?.data}/>; }\r\n}\r\n\r\nfunction ArticleDetailData({data}) {\r\n    const axios = require('axios');\r\n\r\n    function deleteArticle(articleId) {\r\n        alert(\"Aritcle Deleted\");\r\n        axios.delete(`/board/${articleId}`);\r\n        window.location.href=`/board/category/${data?.category_id}`;\r\n    }\r\n\r\n    return (\r\n        <div style={{marginLeft: \"10px\"}}>\r\n            <div style={{borderBottom: \"2.5px solid black\", padding: \"10px\", overflow: \"auto\"}}>\r\n                <div style={{float: \"left\", width: \"500px\", marginRight: \"20px\"}}>\r\n                    <h1>Article Detail</h1> <br/>\r\n                    <b> ID : </b> <span> {data?.id} </span> <br/>\r\n                    <b> Title : </b> <span> {data?.title} </span> <br/>\r\n                    <b> Category : </b> <span> {data?.category_name} </span> <br/>\r\n                    <b> Content : </b> <span> {data?.content} </span> <br/>\r\n                    <b> Created By : </b> <span> {data?.created_id} </span> <br/>\r\n                    <b> Created At : </b> <span> {data?.created_at} </span> <br/>\r\n                    <b> Visit : </b> <span> {data?.visit_cnt} </span> \r\n                    <div style={{float: \"right\"}}>\r\n                        <Link to={`/board/${data?.id}/edit`} id=\"none\" >\r\n                            <button style={{float: \"right\"}} id=\"btn-post\"> Edit </button></Link>\r\n                        <button id=\"btn-remove\" \r\n                                onClick={() => { deleteArticle(data.id) }}>Delete</button>\r\n                    </div>\r\n                    <br/> <br/>\r\n                    <div style={{float: \"right\"}}>\r\n                        <Link to={`/`} id=\"none\">\r\n                                <button id=\"btn-default\"> Home </button></Link>\r\n                        <Link to={`/board`} id=\"none\">\r\n                                <button id=\"btn-default\"> Article List </button></Link>\r\n                        <Link to={`/board/category/${data?.category_id}`} id=\"none\">\r\n                            <button id=\"btn-default\"> {data?.category_name} List </button></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Comment article={data}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArticleDeatil;","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\Article.js",[],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\ArticleRegister.js",[],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Comment\\Comment.js",[],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Article\\ArticleEdit.js",["85","86"],"import React, {useState, useEffect, useCallback} from \"react\";\r\n\r\nfunction ArticleEdit(){\r\n    const urlList = ((window.location.href).split('/'));\r\n    const articleId = urlList[(urlList.length)-2];\r\n    \r\n    const [articleDetail, setArticleDetail] = useState({\r\n        data : {}\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(()=> {\r\n        const RES = fetch(`/board/${articleId}`)\r\n        .then(res =>  res.json())\r\n        .then(result => {\r\n            setArticleDetail(result);\r\n            setLoading(false);\r\n        });\r\n    },[]);\r\n\r\n    if(loading) {return <div> Loading ... </div>}\r\n    else { \r\n        return (\r\n        <ArticleEditForm titleOrigin={articleDetail?.data?.title}\r\n                         contentOrigin={articleDetail?.data?.content}\r\n                         categoryOrigin={articleDetail?.data?.category_id} \r\n                         idOrigin={articleDetail?.data?.created_id} \r\n                         articleId={articleDetail?.data?.id}/>\r\n    )}\r\n}\r\n\r\n\r\nfunction ArticleEditForm({titleOrigin, contentOrigin, categoryOrigin, idOrigin, articleId}) {\r\n    const axios = require('axios');\r\n\r\n    const [title, setTitle] = useState(titleOrigin);\r\n    const [content, setContent] = useState(contentOrigin);\r\n    const [category, setCategory] = useState(categoryOrigin);\r\n    const [createdId, setCreatedId] = useState(idOrigin);\r\n\r\n    const editCreatedId = useCallback(e => {\r\n        setCreatedId(e.target.value);\r\n    }, [])\r\n\r\n    const editTitle = useCallback(e => {\r\n        setTitle(e.target.value);\r\n    }, [])\r\n    \r\n    const editCategory = useCallback(e => {\r\n        setCategory(e.target.value);\r\n    }, [])\r\n    \r\n    const editContent = useCallback(e => {\r\n        setContent(e.target.value);\r\n    }, [])\r\n    \r\n    const isEmpty = function(value){\r\n        if(value === \"\" || value === null || value === undefined || ( value !== null && typeof value === \"object\" && !Object.keys(value).length)){\r\n            return true;\r\n        }else { return false; }\r\n    }\r\n\r\n    const editArticle = (e) => {\r\n        if(isEmpty(e.target.value)){ setCreatedId(idOrigin); }\r\n        if(isEmpty(e.target.value)){ setTitle(titleOrigin); }\r\n        if(isEmpty(e.target.value)){ setTitle(categoryOrigin); } \r\n        if(isEmpty(e.target.value)){ setContent(contentOrigin); }\r\n        \r\n        axios.put(`/board/${articleId}`, {\r\n            data : {\r\n                title : title,\r\n                content : content,\r\n                created_id : createdId,\r\n                category_id : category\r\n            }\r\n        });\r\n        \r\n        alert(\"Article Edited\");\r\n    }\r\n\r\n    return(\r\n        <div id=\"div-box\">\r\n            <form onSubmit={editArticle}>\r\n                <div id=\"div-box\">\r\n                    <b style={{textAlign: \"center\"}}> Edit Article </b> <br/>\r\n                    <input id=\"id-box\" placeholder={idOrigin} onChange={editCreatedId}></input> <br/>\r\n                    <input id=\"id-box\" placeholder={titleOrigin} onChange={editTitle}></input> <br/>\r\n                    <input id=\"id-box\" placeholder={categoryOrigin} onChange={editCategory} ></input> <br/>\r\n                    <textarea id=\"text-box\" placeholder={contentOrigin} onChange={editContent}></textarea> <br/>\r\n                    <button type=\"submit\" id=\"btn-post\" style={{textAlign: \"right\"}}\r\n                            onClick={() => {window.location.href=`/board/${articleId}`}}> Save </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleEdit;","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\CategoryRegister.js",[],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\CategoryEdit.js",["87","88"],"import {useState, useCallback, useEffect} from \"react\";\r\n\r\n\r\nfunction CategoryEdit(){\r\n    const urlList = ((window.location.href).split('/'));\r\n    const categoryId = urlList[(urlList.length)-2];\r\n    \r\n    const [category, setCategory] = useState({\r\n        data : {}\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(()=> {\r\n        const RES = fetch(`/category/${categoryId}`)\r\n        .then(res =>  res.json())\r\n        .then(result => {\r\n            setCategory(result);\r\n            setLoading(false);\r\n        });\r\n    },[]);\r\n\r\n    if(loading) {return <div> Loading ... </div>}\r\n    else { \r\n        return (\r\n            <div>\r\n                <CategoryEditForm categoryId={categoryId} nameOrigin={category.data.name}/>\r\n                <button id=\"btn-remove\"\r\n                        onClick={() => {window.location.href=`/category`}}> Back </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CategoryEditForm({categoryId, nameOrigin}){\r\n    const axios = require('axios');\r\n    const [categoryName, setCategoryName] = useState(nameOrigin);\r\n    \r\n    const editName = useCallback( e => {\r\n        setCategoryName(e.target.value);\r\n    }, [])\r\n\r\n    const isEmpty = function(value){\r\n        if(value === \"\" || value === null || value === undefined || ( value !== null && typeof value === \"object\" && !Object.keys(value).length)){\r\n            return true;\r\n        }else { return false; }\r\n    }\r\n\r\n    const editCategory = (e) => {\r\n        if(isEmpty(e.target.value)){ setCategoryName(nameOrigin); }\r\n\r\n        axios.put(`/category/${categoryId}`, {\r\n            data : {\r\n                name: categoryName\r\n            }\r\n        })\r\n        alert(\"category: \" + nameOrigin + \" id: \" + categoryId + \" edited. \\n After : \" + categoryName);\r\n    }\r\n\r\n\r\n    return (\r\n        <><br/><br/><br/>\r\n        <form onSubmit={editCategory}>\r\n            <div id=\"div-box\">\r\n                <b style={{textAlign: \"center\"}}> Edit Category </b> <br/>\r\n                <input id=\"id-box\" placeholder={categoryId} readOnly></input> <br/>\r\n                <input id=\"id-box\" placeholder={nameOrigin} onChange={editName}></input> <br/>\r\n                <button type=\"submit\" id=\"btn-post\" style={{textAlign: \"right\"}}\r\n                     onClick={() => {window.location.href=`/category`}}> Save </button>\r\n            </div>\r\n        </form></>\r\n    )\r\n}\r\n\r\nexport default CategoryEdit;","C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Comment\\CommentRegister.js",[],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\CategoryDetail.js",[],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Category\\CategoryBar.js",[],"C:\\Users\\kelly\\IdeaProjects\\restAPI\\src\\main\\front-end\\app_board\\src\\Comment\\CommentEdit.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":25,"column":15,"nodeType":"95","messageId":"96","endLine":25,"endColumn":18},{"ruleId":"93","severity":1,"message":"97","line":14,"column":15,"nodeType":"95","messageId":"96","endLine":14,"endColumn":18},{"ruleId":"93","severity":1,"message":"97","line":16,"column":15,"nodeType":"95","messageId":"96","endLine":16,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":30,"column":8,"nodeType":"100","endLine":30,"endColumn":10,"suggestions":"101"},{"ruleId":"93","severity":1,"message":"97","line":15,"column":15,"nodeType":"95","messageId":"96","endLine":15,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":21,"column":7,"nodeType":"100","endLine":21,"endColumn":9,"suggestions":"103"},{"ruleId":"93","severity":1,"message":"97","line":13,"column":15,"nodeType":"95","messageId":"96","endLine":13,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":19,"column":7,"nodeType":"100","endLine":19,"endColumn":9,"suggestions":"104"},{"ruleId":"93","severity":1,"message":"97","line":14,"column":15,"nodeType":"95","messageId":"96","endLine":14,"endColumn":18},{"ruleId":"98","severity":1,"message":"105","line":20,"column":7,"nodeType":"100","endLine":20,"endColumn":9,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'RES' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category' and 'categoryId'. Either include them or remove the dependency array. If 'setCategoryName' needs the current value of 'category', you can also switch to useReducer instead of useState and read 'category' in the reducer.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'articleId'. Either include it or remove the dependency array.",["110"],["111"],"React Hook useEffect has a missing dependency: 'categoryId'. Either include it or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [category, categoryId]",{"range":"120","text":"121"},"Update the dependencies array to be: [articleId]",{"range":"122","text":"123"},{"range":"124","text":"123"},"Update the dependencies array to be: [categoryId]",{"range":"125","text":"126"},[1267,1269],"[category, categoryId]",[683,685],"[articleId]",[574,576],[560,562],"[categoryId]"]